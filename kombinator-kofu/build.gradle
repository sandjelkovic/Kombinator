buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation("org.springframework.fu:spring-fu-kofu:0.0.3.BUILD-SNAPSHOT")
    implementation("org.springframework.data:spring-data-r2dbc:1.0.0.BUILD-SNAPSHOT")
    implementation("io.r2dbc:r2dbc-spi:1.0.0.M5")
    implementation("io.r2dbc:r2dbc-postgresql:1.0.0.M5")
//    implementation("io.r2dbc:r2dbc-h2:1.0.0.M5")

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")



//	Arrow
    compile("io.arrow-kt:arrow-core:${arrowVersion}")
    compile("io.arrow-kt:arrow-syntax:${arrowVersion}")
    compile("io.arrow-kt:arrow-typeclasses:${arrowVersion}")
    compile("io.arrow-kt:arrow-data:${arrowVersion}")
    compile("io.arrow-kt:arrow-instances-core:${arrowVersion}")
    compile("io.arrow-kt:arrow-instances-data:${arrowVersion}")
    compile("io.arrow-kt:arrow-optics:${arrowVersion}")
    compile("io.arrow-kt:arrow-generic:${arrowVersion}")

//	Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation("io.strikt:strikt-core:${striktVersion}")
//    testImplementation("io.strikt:strikt-java-time:${striktVersion}")
    testImplementation("io.mockk:mockk:${mockkVersion}")

    implementation ('com.h2database:h2')
}
